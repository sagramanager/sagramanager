openapi: 3.0.0

info:
  title: "sagramanager"
  version: "1.0.0"
  license:
    name: 'Licensed Under MIT'
    url: 'https://spdx.org/licenses/MIT.html'
   
servers: 
  - url: '/api/v1/'
    description: "API server"

tags:
  - name: "foodstuff"
    description: "Foodstuff operations"
  - name: "orders"
    description: "Orders operations"
  - name: "users"
    description: "Operations to other users"
  - name: "user"
    description: "Operations to current user"
  - name: "login"
    description: "Operations regarding login or token validation"

components:
  schemas:
    Foodstuff:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        shortName:
          type: string
        description:
          type: string
        price:
          type: string
    FoodstuffAddRequest:
      type: object
      properties:
        name:
          type: string
        shortName:
          type: string
        description:
          type: string
        price:
          type: string
      required:
        - name
        - price
    FoodstuffAdd:
      type: object
      properties:
        status:
          type: string
          example: "ok"
        foodstuff:
          $ref: '#/components/schemas/Foodstuff'
    Order:
      type: object
      properties:
        id:
          type: integer
        customer:
          type: string
        places:
          type: number
        tableNumber:
          type: string
        waiter:
          type: string
        notes:
          type: string
        takeAway:
          type: boolean
        foodstuffs:
          type: array
          items:
            type: object
            properties:
              foodstuff:
                type: number
              amount:
                type: number
              notes:
                type: string
    OrderAddRequest:
      type: object
      properties:
        customer:
          type: string
        places:
          type: number
        tableNumber:
          type: string
        waiter:
          type: string
        notes:
          type: string
        takeAway:
          type: boolean
        foodstuffs:
          type: array
          items:
            type: object
            properties:
              foodstuff:
                type: number
              amount:
                type: number
              notes:
                type: string
      required:
        - foodstuffs
    OrderAdd:
      type: object
      properties:
        status:
          type: string
          example: "ok"
        order:
          $ref: '#/components/schemas/Order'
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        name:
          type: string
        isHidden:
          type: boolean
    UserList:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
    ValidationError:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              msg:
                type: string
              params:
                type: string
              location:
                type: string
    ValidationSuccessfull:
      type: object
      properties:
        status:
          type: string
          example: "ok"
        user:
          $ref: '#/components/schemas/User'
    UserAddRequest:
      type: object
      properties:
        username:
          type: string
        name:
          type: string
        password:
          type: string
      required:
        - username
        - password
    UserAdd:
      type: object
      properties:
        status:
          type: string
          example: "ok"
        user:
          $ref: '#/components/schemas/User'
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    AuthResponse:
      type: object
      properties:
        access_token:
          type: string
        user:
          $ref: '#/components/schemas/User'
    AuthErrorResponse:
      type: object
      properties:
        status:
          type: string
          example: "error"
        message:
          type: string
          example: "Password is incorrect"
    Version:
      type: object
      properties:
        version:
          type: string
          example: "1.0.0"
    Logs:
      type: object
      properties:
        logs:
          type: array
          items:
            type: object
            properties:
              datetime:
                type: string
                format: date-time
              log:
                type: string
                example: "sagramanager server running on port 4466"
              type:
                type: string
                example: info
    Pong:
      type: string
      example: "pong"
