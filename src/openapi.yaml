openapi: 3.0.0

info:
  title: "sagramanager"
  version: "1.0.0"
  license:
    name: 'Licensed Under MIT'
    url: 'https://spdx.org/licenses/MIT.html'
   
servers: 
  - url: '/api/v1/'
    description: "API server"

tags:
  - name: "foodstuffType"
    description: "Foodstuff type operations"
  - name: "foodstuff"
    description: "Foodstuff operations"
  - name: "orders"
    description: "Orders operations"
  - name: "users"
    description: "Operations to other users"
  - name: "user"
    description: "Operations to current user"
  - name: "login"
    description: "Operations regarding login or token validation"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

  requestBodies:
    AddFoodstuffTypeRequest:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              name:
                type: string
            required:
              - name
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
            required:
              - name
    AddFoodstuffRequest:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              name:
                type: string
              shortName:
                type: string
              description:
                type: string
              price:
                type: string
              foodstuffTypeId:
                type: number
            required:
              - name
              - price
              - foodstuffTypeId
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              shortName:
                type: string
              description:
                type: string
              price:
                type: string
              foodstuffTypeId:
                type: number
            required:
              - name
              - price
              - foodstuffTypeId
    AddOrderRequest:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              customer:
                type: string
              places:
                type: number
              tableNumber:
                type: string
              waiter:
                type: string
              notes:
                type: string
              takeAway:
                type: boolean
              foodstuffs:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    quantity:
                      type: number
                    notes:
                      type: string
            required:
              - foodstuffs
    AddUserRequest:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              username:
                type: string
              name:
                type: string
              password:
                type: string
            required:
              - username
              - password
        application/json:
          schema:
            type: object
            properties:
              username:
                type: string
              name:
                type: string
              password:
                type: string
            required:
              - username
              - password
    LoginRequest:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
            required:
              - username
              - password
        application/json:
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
            required:
              - username
              - password
    ValidateTokenRequest:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              access_token:
                type: string
            required:
              - access_token
        application/json:
          schema:
            type: object
            properties:
              access_token:
                type: string
            required:
              - access_token

  responses:
    FoodstuffTypesListResponse:
      description: "List of foodstuff types"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/FoodstuffType'
    AddFoodstuffTypeResponse:
      description: "Foodstuff type added"
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "ok"
              foodstuffType:
                $ref: '#/components/schemas/FoodstuffType'
    FoodstuffsListResponse:
      description: "List of foodstuffs"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Foodstuff'
    AddFoodstuffResponse:
      description: "Foodstuff added"
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "ok"
              foodstuff:
                $ref: '#/components/schemas/Foodstuff'
    OrdersListResponse:
      description: "List of orders"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Order'
    AddOrderResponse:
      description: "Order successfully added"
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "ok"
              order:
                $ref: '#/components/schemas/Order'
    UsersListResponse:
      description: "List of users"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
    AddUserResponse:
      description: "User added successfully"
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "ok"
              user:
                $ref: '#/components/schemas/User'
    UsersEmptyResponse:
      description: "Is users list empty"
      content:
        application/json:
          schema:
            type: boolean
    ProfileResponse:
      description: "User profile"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
    AuthResponse:
      description: "Login response"
      content:
        application/json:
          schema:
            type: object
            properties:
              access_token:
                type: string
              user:
                $ref: '#/components/schemas/User'
    TokenValidationSuccessfull:
      description: "Token validation successfull"
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "ok"
              user:
                $ref: '#/components/schemas/User'
    AuthError:
      description: "Auth error"
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "error"
              message:
                type: string
                example: "Password is incorrect"
    ValidationError:
      description: "Validation error"
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: object
                  properties:
                    msg:
                      type: string
                    params:
                      type: string
                    location:
                      type: string
    VersionResponse:
      description: "SagraManager version"
      content:
        application/json:
          schema:
            type: object
            properties:
              version:
                type: string
    LogsResponse:
      description: "Logs response"
      content:
        application/json:
          schema:
            type: object
            properties:
              logs:
                type: array
                items:
                  $ref: '#/components/schemas/Log'
    PingResponse:
      description: "Ping response"
      content:
        application/plain:
          schema:
            type: string
            example: "pong"

  schemas:
    FoodstuffType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Foodstuff:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        shortName:
          type: string
        description:
          type: string
        price:
          type: string
        type:
          type: string
    Order:
      type: object
      properties:
        id:
          type: integer
        customer:
          type: string
        places:
          type: number
        tableNumber:
          type: string
        waiter:
          type: string
        notes:
          type: string
        takeAway:
          type: boolean
        foodstuffs:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
              quantity:
                type: number
              notes:
                type: string
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        name:
          type: string
        permissions:
          type: string
        isHidden:
          type: boolean
    Log:
      type: object
      properties:
        datetime:
          type: string
          format: date-time
        log:
          type: string
          example: "sagramanager server running on port 4466"
        type:
          type: string
          example: info
